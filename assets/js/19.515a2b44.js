(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{371:function(t,s,a){"use strict";a.r(s);var n=a(43),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"macos-bash-profile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#macos-bash-profile"}},[t._v("#")]),t._v(" MacOS Bash Profile")]),t._v(" "),a("p",[t._v("My bash profile for improving the default Terminal.")]),t._v(" "),a("h2",{attrs:{id:"editing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#editing"}},[t._v("#")]),t._v(" Editing")]),t._v(" "),a("p",[t._v("To edit your bash_profile just enter "),a("code",[t._v("nano ~/.bash_profile")]),t._v(". After you have saved your changes you can use "),a("code",[t._v("source ~/.bash_profile")]),t._v(" to apply the changes in terminal (or simply restart terminal).")]),t._v(" "),a("h2",{attrs:{id:"profile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#profile"}},[t._v("#")]),t._v(" Profile")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   -----------------------------")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   MAKE TERMINAL BETTER")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   -----------------------------")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   Change Prompt")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   ------------------------------------------------------------")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PS1")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"________________________________________________________________________________'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v("| \\w @ \\h (\\u) "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('| => "')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PS2")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"| => "')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   Add color to terminal")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   ------------------------------------------------------------")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CLICOLOR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("LSCOLORS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ExFxBxDxCxegedabagacad\n\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   -------------------------------")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   FILE AND FOLDER MANAGEMENT")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   -------------------------------")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   cdf:  'Cd's to frontmost window of MacOS Finder")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   ------------------------------------------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("cdf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("currFolderPath")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v(" /usr/bin/osascript "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('EOT\n            tell application "Finder"\n                try\n            set currFolder to (folder of the front window as alias)\n                on error\n            set currFolder to (path to desktop folder as alias)\n                end try\n                POSIX path of currFolder\n            end tell\nEOT')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cd to '),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$currFolderPath")]),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v('"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$currFolderPath")]),t._v('"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   extract:  Extract most know archives with one command")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   ---------------------------------------------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("extract")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" -f "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n            *.tar.bz2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" xjf "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            *.tar.gz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" xzf "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            *.bz2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       bunzip2 "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            *.rar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unrar")]),t._v(" e "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            *.gz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        gunzip "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            *.tar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" xf "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            *.tbz2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" xjf "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            *.tgz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" xzf "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            *.zip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unzip")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            *.Z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         uncompress "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            *.7z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        7z x "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            *"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"'"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("' cannot be extracted via extract()\"")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n             "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n             "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"'"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("' is not a valid file\"")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   ---------------------------")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   COMMANDS")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   ---------------------------")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("alias")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("la")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ls -lah"')]),t._v("                          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# la:       List all including hidden with detailed info")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("alias")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("qfind")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"find . -name "')]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# qfind:    Quickly search for file")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("ff")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" /usr/bin/find "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" -name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$@")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ff:       Find file under the current directory")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("ffs")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" /usr/bin/find "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" -name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$@")]),t._v('"')]),t._v("'*"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' ; }  # ffs:      Find file whose name starts with a given string\nffe () { /usr/bin/find . -name '")]),t._v("*"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\""),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$@")]),t._v('" ; }  # ffe:      Find file whose name ends with a given string\n\nalias standup="git standup -s"              # standup:    Run "git standup" and hide repositories which had no activity\nalias gitstats="git-quick-stats"            # gitstats:   Generate stats for a git repo: https://github.com/arzzen/git-quick-stats/\n\nalias dm="docker-machine"                       # dm:      Shortcut for docker-machine\nalias dmme="eval '),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("docker-machine "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("env")]),t._v(" -u"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v('"  # dmme:    "Docker machine me" - ensures that docker machine is pointing to local\nalias lzd="lazydocker"                          # lzd:     Run lazydocker\n\nalias ip0="ipconfig getifaddr en0"          # ip0:    Get IP Address of ethernet interface 0\nalias ip1="ipconfig getifaddr en1"          # ip1:    Get IP Address of ethernet interface 1\n\n#   ---------------------------\n#   PATH config\n#   ---------------------------\n\n# Bash Completion: brew install bash-completion\nif [ -f '),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("brew --prefix"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("/etc/bash_completion ]; then\n    . "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("brew --prefix"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('/etc/bash_completion\nfi\n\n# Node version manager (git install): https://github.com/nvm-sh/nvm#git-install\nexport NVM_DIR="'),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v('/.nvm"\n[ -s "'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$NVM_DIR")]),t._v('/nvm.sh" ] && \\. "'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$NVM_DIR")]),t._v('/nvm.sh"  # This loads nvm\n[ -s "'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$NVM_DIR")]),t._v('/bash_completion" ] && \\. "'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$NVM_DIR")]),t._v('/bash_completion"  # This loads nvm bash_completion\n\nexport ANDROID_SDK=/Users/copple/Library/Android/sdk\nexport PATH=/Users/copple/Library/Android/sdk/platform-tools:'),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),t._v("\n\n# The next line updates PATH for the Google Cloud SDK.\nif [ -f '")]),t._v("/Users/copple/Library/google-cloud-sdk/path.bash.inc"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' ]; then . '")]),t._v("/Users/copple/Library/google-cloud-sdk/path.bash.inc"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'; fi\n\n# The next line enables shell command completion for gcloud.\nif [ -f '")]),t._v("/Users/copple/Library/google-cloud-sdk/completion.bash.inc"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' ]; then . '")]),t._v("/Users/copple/Library/google-cloud-sdk/completion.bash.inc'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("h2",{attrs:{id:"resources"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resources"}},[t._v("#")]),t._v(" Resources")]),t._v(" "),a("ul",[a("li",[t._v("Some handy commands found here: "),a("a",{attrs:{href:"https://gist.github.com/natelandau/10654137",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gist.github.com/natelandau/10654137"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);